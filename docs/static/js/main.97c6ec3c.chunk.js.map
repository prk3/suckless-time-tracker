{"version":3,"sources":["reportWebVitals.ts","state.tsx","utils.ts","task.tsx","tasks.tsx","week-summary.tsx","week-timeline.tsx","week.tsx","App.tsx","sync.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","tasks","events","activeTask","settings","manDayDuration","Duration","fromObject","hours","eventRetentionMonths","version","StateContext","React","createContext","state","update","serializeState","JSON","stringify","deserializeState","stateString","obj","parse","Error","map","e","start_time","DateTime","fromISO","end_time","groupTasksByTaskId","Object","fromEntries","task","id","cs","output","classes","forEach","c","assert","condition","console","error","trace","Task","fn","active","timeSpent","onActiveChange","onEstimationChange","onNameChange","onDelete","innerRef","timeSpentElement","estimation","estimationClassName","estimationSpent","as","estimationRatio","className","value","Math","min","title","toFixed","max","onClick","ev","target","currentTarget","ref","name","onChange","type","step","Number","window","confirm","Tasks","useContext","useState","filter","setFilter","taskMap","useMemo","story","event","taskId","push","groupEventsByTaskId","updateTaskEstimation","undefined","deleted","updateTaskActive","newEvents","length","local","deleteTask","filteredTasks","trim","includes","index","totalTime","seconds","plus","diff","calculateTotalTimeFromEvents","draggableId","String","provided","style","padding","draggableProps","dragHandleProps","floor","random","setTimeout","document","querySelector","focus","placeholder","alert","onDragEnd","result","source","destination","reason","sourceIndex","findIndex","destinationIndex","splice","reorderedItem","droppableId","droppableProps","formatDuration","duration","minutes","WeekSummary","startOfWeek","weekLog","week","day","weekday","taskDuration","weekLogFromEvents","endOfWeek","endOf","selectWeekEvents","days","toFormat","entries","keys","values","reduce","acc","next","toString","WeekTimeline","weekFromEvents","range","hour","time","top","startOf","height","start","end","log","end_","equals","heightFromStartAndEnd","lines","linesCountFromHeight","WebkitLineClamp","Week","setStartOfWeek","mode","setMode","minus","weeks","retrieveState","localStorage","getItem","persistState","retrieveSync","syncString","sync","persistSync","setItem","serializeSync","sendStateToServer","fetch","storageUrl","method","body","headers","authToken","catch","_error","response","status","App","setState","latestStateRef","useRef","dirty","syncRef","syncPromiseRef","Promise","resolve","useEffect","current","text","newlineIndex","indexOf","substring","versionAndState","serverVersion","serverState","saving","debouncedSaveRef","debounce","trailing","leading","onbeforeunload","useReducer","forceUpdate","forceUpdateIntervalRef","setInterval","clearInterval","Provider","updateFunction","newState","global","dbg","a","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97c6ec3c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { DateTime, Duration } from 'luxon';\nimport React from 'react';\n\nexport type TaskId = number;\nexport type ManDays = number;\n\n// A thing you can work on.\nexport type Task = {\n    id: TaskId,\n    name: string,\n    // If estimated, we'll be able to show time spent on the task.\n    estimation: ManDays | null,\n    // Flag hiding a task from the interface. Soft-deleted tasks will be\n    // permanently deleted when no \"start\" event has been recorded in 3 months.\n    // This makes sure that deleting a task will not destroy \"recent\" history.\n    deleted: boolean,\n}\n\n// Started or started and finished piece of work.\nexport type Event = {\n    taskId: TaskId,\n    start_time: DateTime,\n    end_time: DateTime | null,\n}\n\nexport type Settings = {\n    // How much real time one ManDay represents. Used for displaying progress\n    // on tasks.\n    manDayDuration: Duration,\n    // The app is allowed to delete events older than that many months. Progress\n    // on estimated tasks may go down.\n    eventRetentionMonths: number,\n}\n\nexport type State = {\n    tasks: Task[],\n    events: Event[],\n    activeTask: TaskId | null,\n    settings: Settings,\n    // Number identifying state format. Used for migrating.\n    version: number,\n}\n\nexport const initialState: State = {\n    tasks: [],\n    events: [],\n    activeTask: null,\n    settings: {\n        manDayDuration: Duration.fromObject({ hours: 7 }),\n        eventRetentionMonths: 3,\n    },\n    version: 1,\n};\n\nexport type StateUpdateFunction = (state: State) => State;\n\nexport type StateUpdate = (fn: StateUpdateFunction) => void;\n\nexport const StateContext = React.createContext({ state: initialState, update: () => {} } as { state: State, update: StateUpdate });\n\nexport function serializeState(state: State): string {\n    return JSON.stringify(state);\n}\n\nexport function deserializeState(stateString: string): State {\n    let obj = JSON.parse(stateString);\n\n    // migrations\n    // current version = 1\n    if (obj.version !== 1) {\n        throw new Error(`State in unsupported version \"${obj.version}\". Update the app.`);\n    }\n\n    let hydrated = {\n        ...obj,\n        events: obj.events.map((e: any) => ({\n            ...e,\n            start_time: DateTime.fromISO(e.start_time),\n            end_time: e.end_time && DateTime.fromISO(e.end_time)\n        })),\n        settings: {\n            ...obj.settings,\n            manDayDuration: Duration.fromISO(obj.settings.manDayDuration),\n        },\n    };\n\n    return hydrated as State;\n}\n","import { DateTime, Duration } from \"luxon\";\nimport { MouseEvent } from \"react\";\nimport { Event, Task } from \"./state\";\n\nexport function groupTasksByTaskId(tasks: Task[]): { [taskId: number]: Task } {\n    return Object.fromEntries(tasks.map(task => [task.id, task]));\n}\n\nexport function groupEventsByTaskId(events: Event[]): { [taskId: number]: Event[] } {\n    let story: { [taskId: number]: Event[] } = {};\n\n    for (let event of events) {\n        if (story[event.taskId]) {\n            story[event.taskId].push(event);\n        } else {\n            story[event.taskId] = [event];\n        }\n    }\n\n    return story;\n}\n\nexport function calculateTotalTimeFromEvents(events: Event[]): Duration {\n    let totalTime = Duration.fromObject({ seconds: 0 });\n\n    events.forEach(event => {\n        totalTime = totalTime.plus((event.end_time || DateTime.local()).diff(event.start_time));\n    });\n\n    return totalTime;\n}\n\nexport function cs(...classes: (string | false)[]): string {\n    let output = \"\";\n    classes.forEach(c => {\n        if (c !== false) {\n            output = output + \" \" + c;\n        }\n    });\n    return output;\n}\n\nexport function assert(condition: boolean): void {\n    if (!condition) {\n        console.error(\"assertion failed!\");\n        console.trace();\n        throw new Error(\"assertion failed\");\n    }\n}\n\nexport const onlyThisElementClick = (fn: (ev: MouseEvent) => void) => (ev: MouseEvent) => {\n    if (ev.target === ev.currentTarget) {\n        fn(ev);\n    }\n}\n","import { Duration } from 'luxon';\nimport { ManDays, Task as TaskModel } from './state';\nimport { cs, onlyThisElementClick } from './utils';\nimport './task.css';\n\nconst HOURS_IN_ONE_MAN_DAY = 7;\n\ntype TaskProps = {\n    task: TaskModel,\n    active: boolean,\n    timeSpent: Duration,\n    onActiveChange: (active: boolean) => void,\n    onEstimationChange: (estimation: ManDays | null) => void,\n    onNameChange: (name: string) => void,\n    onDelete: () => void,\n    innerRef?: React.Ref<HTMLDivElement>,\n};\n\nexport function Task({ task, active, timeSpent, onActiveChange, onEstimationChange, onNameChange, onDelete, innerRef }: TaskProps) {\n\n    const updateName = (ev: any) => {\n        onNameChange(ev.target.value);\n    };\n\n    const toggleActive = () => {\n        onActiveChange(!active);\n    }\n\n    const updateEstimation = (ev: any) => {\n        onEstimationChange(Number(ev.target.value) || null);\n    };\n\n    const incrementEstimation = () => {\n        onEstimationChange((task.estimation || 0) + 1);\n    };\n\n    const decrementEstimation = () => {\n        onEstimationChange(((task.estimation || 1) - 1) || null);\n    };\n\n    let timeSpentElement = null;\n\n    if (task.estimation !== null) {\n        let estimationSpent = timeSpent.as('hours') / HOURS_IN_ONE_MAN_DAY;\n        let estimationRatio = estimationSpent / task.estimation;\n        let estimationClassName;\n\n             if (estimationRatio < 0.5) estimationClassName = 'ok';\n        else if (estimationRatio < 0.7) estimationClassName = 'worse';\n        else if (estimationRatio < 0.9) estimationClassName = 'bad';\n        else                            estimationClassName = 'critical';\n\n        timeSpentElement = (\n            <span>\n                Time:\n                {\" \"}\n                <progress\n                    className={cs(estimationClassName)}\n                    value={Math.min(estimationRatio, 1.0)}\n                    title={`${estimationSpent.toFixed(1)} of ${task.estimation} man days`}\n                    max=\"1\"\n                />\n            </span>\n        );\n    }\n\n    return (\n        <div\n            className={cs(\"task\", active && \"active\")}\n            key={task.id}\n            onClick={onlyThisElementClick(toggleActive)}\n            ref={innerRef}\n        >\n            <div><textarea className=\"name\" value={task.name} onChange={updateName}/></div>\n            <div>{\"Estimation: \"}\n                <button type=\"button\" className=\"button minus\" onClick={decrementEstimation}>-</button>\n                {\" \"}\n                <input\n                    className=\"estimation\"\n                    min=\"1\"\n                    step=\"1\"\n                    type=\"number\"\n                    value={task.estimation || \"\"}\n                    onChange={updateEstimation}\n                />\n                {\" \"}\n                <button type=\"button\" className=\"button plus\" onClick={incrementEstimation}>+</button>\n                {\" \"}\n                {timeSpentElement}\n                {\" \"}\n                <button type=\"button\" className=\"button\" onClick={() => window.confirm(\"You sure?\") && onDelete()}>Delete</button>\n            </div>\n        </div>\n    );\n}\n","import { DateTime } from 'luxon';\nimport React from 'react';\nimport { ManDays, StateContext, TaskId } from './state';\nimport { Task } from './task';\nimport { assert, groupEventsByTaskId, groupTasksByTaskId, calculateTotalTimeFromEvents } from './utils';\nimport './tasks.css';\n\nimport { DragDropContext, Draggable, Droppable, DropResult, ResponderProvided } from 'react-beautiful-dnd';\n\nconst ALERT_MSG = `\nGood day!\n\nThis is a small app for time tracking. It's serverless, meaning all data is stored on your device, in local storage*. As you can see, it's pretty basic and not well tested. Probably works only on Firefox. Use it at your own risk.\n\n* You can enable syncing through a self-hosted backend, more on that in README.md at https://github.com/prk3/suckless-time-tracker.\n\nsuckless-time-tracker 0.2.0`;\n\nexport function Tasks() {\n    const { state, update } = React.useContext(StateContext);\n    const [filter, setFilter] = React.useState('');\n\n    let taskMap = React.useMemo(() => groupTasksByTaskId(state.tasks), [state.tasks]);\n    let story = React.useMemo(() => groupEventsByTaskId(state.events), [state.events]);\n\n    const addNewTask = () => {\n        update(state => {\n            let id = Math.floor(Math.random() * 1_000_000_000);\n\n            return {\n                ...state,\n                tasks: [\n                    {\n                        id,\n                        name: \"\",\n                        estimation: null,\n                        deleted: false,\n                    },\n                    ...state.tasks,\n                ],\n            };\n        });\n        // Focus on the new task.\n        window.setTimeout(() => {\n            // @ts-ignore\n            document.querySelector(\".task .name\")?.focus();\n        },1);\n    };\n\n    const updateFilter = (ev: any) => {\n        setFilter(ev.target.value);\n    };\n\n    const updateTaskName = (id: TaskId) => (name: string) => {\n        // Task must exist and not be deleted.\n        assert(taskMap[id] !== undefined);\n        assert(taskMap[id].deleted === false);\n\n        update(state => ({\n            ...state,\n            tasks: state.tasks.map(task => task.id !== id\n                ? task\n                : { ...task, name }\n            ),\n        }));\n    };\n\n    const updateTaskEstimation = (id: TaskId) => (estimation: ManDays | null) => {\n        // Task must exist and not be deleted.\n        assert(taskMap[id] !== undefined);\n        assert(taskMap[id].deleted === false);\n\n        update(state => ({\n            ...state,\n            tasks: state.tasks.map(task => task.id !== id\n                ? task\n                : { ...task, estimation }\n            ),\n        }));\n    };\n\n    const updateTaskActive = (id: TaskId) => (active: boolean) => {\n        // Task must exist and not be deleted.\n        assert(taskMap[id] !== undefined);\n        assert(taskMap[id].deleted === false);\n\n        update(state => {\n            if (active) {\n                // Task must be inactive if we want to activate it.\n                assert(state.activeTask !== id);\n\n                let newEvents = [...state.events];\n\n                if (state.activeTask !== null) {\n                    assert(newEvents.length > 0);\n                    assert(newEvents[newEvents.length - 1].end_time === null);\n                    newEvents[newEvents.length - 1] = {\n                        ...newEvents[newEvents.length - 1],\n                        end_time: DateTime.local(),\n                    };\n                }\n                newEvents.push({\n                    taskId: id,\n                    start_time: DateTime.local(),\n                    end_time: null,\n                });\n\n                return {\n                    ...state,\n                    activeTask: id,\n                    events: newEvents,\n                };\n            } else {\n                // Task must be active if we want to deactivate it.\n                assert(state.activeTask === id);\n\n                let newEvents = [...state.events];\n\n                assert(newEvents.length > 0);\n                assert(newEvents[newEvents.length - 1].end_time === null);\n\n                newEvents[newEvents.length - 1] = {\n                    ...newEvents[newEvents.length - 1],\n                    end_time: DateTime.local(),\n                };\n\n                return {\n                    ...state,\n                    activeTask: null,\n                    events: newEvents,\n                };\n            }\n        });\n    };\n\n    const deleteTask = (id: TaskId) => () => {\n        // Task must exist and not be deleted.\n        assert(taskMap[id] !== undefined);\n        assert(taskMap[id].deleted === false);\n\n        update(state => {\n            let events;\n            let activeTask;\n            if (state.activeTask === id) {\n                events = [...state.events];\n                assert(events.length > 0);\n                assert(events[events.length - 1].end_time === null);\n                events[events.length - 1] = {\n                    ...events[events.length - 1],\n                    end_time: DateTime.local(),\n                };\n                activeTask = null;\n            } else {\n                events = state.events;\n                activeTask = state.activeTask;\n            }\n\n            return {\n                ...state,\n                tasks: state.tasks.map(task => task.id !== id\n                    ? task\n                    : { ...task, deleted: true }\n                ),\n                activeTask,\n                events,\n            };\n        });\n    };\n\n    const filteredTasks = state.tasks\n        .filter(task => !task.deleted)\n        .filter(task => filter.trim() === \"\" || task.name.includes(filter.trim()))\n\n    const moveTask = (result: DropResult, provided: ResponderProvided) => {\n        const source = result.source;\n        const destination = result.destination;\n\n        if (result.reason === 'DROP' && destination !== undefined) {\n            update(state => {\n                const sourceIndex = state.tasks.findIndex(e => e === filteredTasks[source.index]);\n                const destinationIndex = state.tasks.findIndex(e => e === filteredTasks[destination.index]);\n\n                const tasks = [...state.tasks];\n                const [reorderedItem] = tasks.splice(sourceIndex, 1);\n                tasks.splice(destinationIndex, 0, reorderedItem);\n\n                return { ...state, tasks };\n            });\n        }\n    };\n\n    const tasks = filteredTasks\n        .map((task, index) => {\n            let active = task.id === state.activeTask;\n            let timeSpent = calculateTotalTimeFromEvents(story[task.id] || []);\n\n            return (\n                <Draggable key={task.id} draggableId={String(task.id)} index={index}>\n                    {(provided) => (\n                        <div style={{ padding: '2.5px 5px' }}>\n                            <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} >\n                                <Task\n                                    task={task}\n                                    active={active}\n                                    timeSpent={timeSpent}\n                                    onNameChange={updateTaskName(task.id)}\n                                    onEstimationChange={updateTaskEstimation(task.id)}\n                                    onActiveChange={updateTaskActive(task.id)}\n                                    onDelete={deleteTask(task.id)}\n                                />\n                            </div>\n                        </div>\n                    )}\n                </Draggable>\n            );\n        });\n\n    return (\n        <div>\n            <div className=\"tasks-bar\">\n                <button type=\"button\" className=\"button plus\" onClick={addNewTask}>+</button>\n                {\" \"}\n                <input type=\"text\" value={filter} placeholder=\"Search...\" onChange={updateFilter} />\n                {\" \"}\n                <button type=\"button\" className=\"button plus\" onClick={() => alert(ALERT_MSG)}>?</button>\n            </div>\n            <DragDropContext onDragEnd={moveTask}>\n                <Droppable droppableId=\"tasks\">\n                    {(provided) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {tasks}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    );\n}\n","import React from 'react';\nimport { DateTime, Duration } from 'luxon';\nimport { Event, StateContext } from './state';\nimport { groupTasksByTaskId } from './utils';\n\nfunction formatDuration(duration: Duration): string {\n    let minutes = Math.floor(duration.as('minutes'));\n\n    if (minutes < 60) {\n        return `${minutes}m`;\n    } else if (minutes % 60 === 0) {\n        return `${Math.floor(minutes / 60)}h`;\n    } else {\n        return `${Math.floor(minutes / 60)}h${minutes % 60}m`;\n    }\n}\n\nfunction selectWeekEvents(events: Event[], startOfWeek: DateTime) {\n    let endOfWeek = startOfWeek.endOf('week');\n    return events.filter(event => event.start_time >= startOfWeek && event.start_time <= endOfWeek);\n}\n\nfunction weekLogFromEvents(events: Event[]) {\n    let week: { [taskId: number]: Duration }[] = [{}, {}, {}, {}, {}, {}, {}];\n\n    for (let event of events) {\n        let day = week[event.start_time.weekday-1];\n        let taskDuration = (event.end_time || DateTime.local()).diff(event.start_time);\n        day[event.taskId] = day[event.taskId]?.plus(taskDuration) ?? taskDuration;\n    }\n\n    return week;\n}\n\ntype Props = {\n    startOfWeek: DateTime,\n}\n\nexport default function WeekSummary({ startOfWeek }: Props) {\n    const { state } = React.useContext(StateContext);\n\n    const taskMap = React.useMemo(() => groupTasksByTaskId(state.tasks), [state.tasks]);\n    const weekEvents = React.useMemo(() => selectWeekEvents(state.events, startOfWeek), [state.events, startOfWeek]);\n    const weekLog = weekLogFromEvents(weekEvents);\n\n    return (\n        <div className=\"week-view\">\n            {weekLog.map((day, index) => (\n                <div className=\"week-day\" key={startOfWeek.toString() + ' ' + index}>\n                    <div className=\"week-day-name\" key=\"day\">{startOfWeek.plus({ days: index }).toFormat('cccc')}</div>\n                    {Object.entries(day).map(([taskId, duration]) => (\n                        <div className=\"week-task-log\" key={taskId}>\n                            <div className=\"week-task-log-name\">{taskMap[taskId as any as number].name}</div>\n                            <div className=\"week-task-log-time\">{formatDuration(duration)}</div>\n                        </div>\n                    ))}\n                    {Object.keys(day).length > 0\n                        ? (\n                            <div className=\"week-task-summary\">{formatDuration(Object.values(day).reduce((acc, next) => acc.plus(next)))}</div>\n                        )\n                        : null\n                    }\n                </div>\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { DateTime, Duration } from 'luxon';\nimport { Event, StateContext } from './state';\nimport { groupTasksByTaskId } from './utils';\nimport { range } from 'lodash';\n\nfunction formatDuration(duration: Duration): string {\n    let minutes = Math.floor(duration.as('minutes'));\n\n    if (minutes < 60) {\n        return `${minutes}m`;\n    } else if (minutes % 60 === 0) {\n        return `${Math.floor(minutes / 60)}h`;\n    } else {\n        return `${Math.floor(minutes / 60)}h${minutes % 60}m`;\n    }\n}\n\nfunction selectWeekEvents(events: Event[], startOfWeek: DateTime) {\n    let endOfWeek = startOfWeek.endOf('week');\n    return events.filter(event => event.start_time >= startOfWeek && event.start_time <= endOfWeek);\n}\n\nfunction weekFromEvents(events: Event[]) {\n    let week: Event[][] = [[], [], [], [], [], [], []];\n\n    for (let event of events) {\n        week[event.start_time.weekday-1].push(event);\n    }\n\n    return week;\n}\n\nfunction topFromTime(time: DateTime) {\n    return time.diff(time.startOf('day')).as('seconds') / (24 * 60 * 60);\n}\n\nfunction heightFromStartAndEnd(start: DateTime, end: DateTime | null) {\n    console.log(start.toString(), end?.toString());\n    const end_ = end || DateTime.local();\n\n    if (!start.endOf('day').equals(end_.endOf('day'))) {\n        return start.endOf('day').diff(start).as('seconds') / (24 * 60 * 60);\n    } else {\n        return end_.diff(start).as('seconds') / (24 * 60 * 60);\n    }\n}\n\nfunction linesCountFromHeight(height: number) {\n    let marginTop = 10;\n    let marginBottom = 10;\n    let lineHeight = 17;\n\n    return Math.max(Math.floor((height - marginTop - marginBottom) / lineHeight), 0);\n}\n\ntype Props = {\n    startOfWeek: DateTime,\n}\n\nexport default function WeekTimeline({ startOfWeek }: Props) {\n    const { state } = React.useContext(StateContext);\n\n    const taskMap = React.useMemo(() => groupTasksByTaskId(state.tasks), [state.tasks]);\n    const weekEvents = React.useMemo(() => selectWeekEvents(state.events, startOfWeek), [state.events, startOfWeek]);\n    const week = weekFromEvents(weekEvents);\n\n    return (\n        <div className=\"week-timeline-container\">\n            <div>\n                {range(0, 25).map(hour => (\n                    <div key={hour} className=\"hour-line\">{hour}</div>\n                ))}\n            </div>\n            <div className=\"week-view week-timeline-view\">\n                {week.map((events, index) => (\n                    <div className=\"week-day\" key={startOfWeek.toString() + ' ' + index}>\n                        <div className=\"week-day-name\" key=\"day\">{startOfWeek.plus({ days: index }).toFormat('cccc')}</div>\n\n                        <div className=\"week-day-events\">\n                            {events.map((event, index) => {\n                                let top = topFromTime(event.start_time) * 960;\n                                let height = heightFromStartAndEnd(event.start_time, event.end_time) * 960;\n                                let lines = linesCountFromHeight(height);\n                                return (\n                                    <div\n                                        className=\"week-event\"\n                                        key={String(event.taskId) + String(index)}\n                                        style={{ top, height }}\n                                        title={taskMap[event.taskId].name + ' - ' + formatDuration((event.end_time || DateTime.local()).diff(event.start_time))}\n                                    >\n                                        <div\n                                            className=\"week-task-log-name\"\n                                            style={{WebkitLineClamp: lines || 'none'}}\n                                        >\n                                            {lines > 0 ? taskMap[event.taskId as any as number].name : ''}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n","import { DateTime } from 'luxon';\nimport React from 'react';\nimport WeekSummary from './week-summary';\nimport WeekTimeline from './week-timeline';\n\nimport './week.css';\n\nexport function Week() {\n    const [startOfWeek, setStartOfWeek] = React.useState(DateTime.local().startOf('week'));\n    const [mode, setMode] = React.useState<'summary'|'timeline'>('summary');\n\n    const oneWeekBack = () => {\n        setStartOfWeek(startOfWeek.minus({ weeks: 1 }));\n    }\n\n    const oneWeekForward = () => {\n        setStartOfWeek(startOfWeek.plus({ weeks: 1 }));\n    }\n\n    const toggleMode = () => {\n        setMode(mode === 'summary' ? 'timeline' : 'summary');\n    }\n\n    return (\n        <div>\n            <div className=\"week-select\">\n                <button className=\"button minus\" type=\"button\" onClick={oneWeekBack}>&lt;</button>\n                <span className=\"week-range\">{startOfWeek.toFormat(\"d LLLL y\") + ' - ' + startOfWeek.endOf('week').toFormat(\"d LLLL y\")}</span>\n                <button className=\"button plus\" type=\"button\" onClick={oneWeekForward}>&gt;</button>\n                {\" \"}\n                <button className=\"button plus\" type=\"button\" onClick={toggleMode}>↷</button>\n            </div>\n            <div>\n                {mode === 'summary' && <WeekSummary startOfWeek={startOfWeek} />}\n                {mode === 'timeline' && <WeekTimeline startOfWeek={startOfWeek} />}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport { StateContext, initialState, StateUpdateFunction, deserializeState, State, serializeState } from './state';\nimport { deserializeSync, initialSync, serializeSync, Sync, SyncNotNull } from './sync';\nimport { Tasks } from './tasks';\nimport { Week } from './week';\nimport { debounce } from 'lodash';\n\nfunction retrieveState(): State {\n  let state = window.localStorage.getItem('state');\n  if (state) {\n    return deserializeState(state);\n  }\n  persistState(initialState);\n  return initialState;\n}\n\nfunction retrieveSync(): Sync {\n  let sync = window.localStorage.getItem('sync');\n  if (sync) {\n    return deserializeSync(sync);\n  }\n  persistSync(initialSync);\n  return initialSync;\n}\n\nfunction persistState(state: State) {\n  window.localStorage.setItem('state', serializeState(state));\n}\n\nfunction persistSync(sync: Sync) {\n  window.localStorage.setItem('sync', serializeSync(sync));\n}\n\nfunction sendStateToServer(state: State, sync: SyncNotNull): Promise<number> {\n  return fetch(`${sync.storageUrl}/string/${sync.version + 1}`, {\n    method: 'PUT',\n    body: serializeState(state),\n    headers: {\n      'Authorization': `Bearer ${sync.authToken}`,\n    },\n  })\n    .catch(_error => {\n      throw new Error(`Request to store app state failed`);\n    })\n    .then(response => {\n      if (response.status === 200) {\n        return sync.version + 1;\n      }\n      else if (response.status === 401) {\n        throw new Error('Unauthorized. Check authToken.');\n      }\n      else if (response.status === 409) {\n        throw new Error('Conflict detected. You will have to resolve it manually.');\n      }\n      else {\n        throw new Error(`Unexpected response status ${response.status}`);\n      }\n    });\n}\n\nfunction getStateFromServer(sync: SyncNotNull): Promise<[number, State] | null> {\n  return fetch(`${sync.storageUrl}/string`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${sync.authToken}`,\n    },\n  })\n    .catch(_error => {\n      throw new Error(`Request to get app state failed`);\n    })\n    .then(response => {\n      if (response.status === 200) {\n        return response\n          .text()\n          .then(text => {\n            let newlineIndex = text.indexOf('\\n');\n            let version = Number(text.substring(0, newlineIndex));\n            let state = deserializeState(text.substring(newlineIndex + 1));\n            return [version, state] as [number, State];\n          });\n      }\n      else if (response.status === 401) {\n        throw new Error('Unauthorized. Check authToken.');\n      }\n      else if (response.status === 404) {\n        return null;\n      }\n      else {\n        throw new Error(`Unexpected response status ${response.status}`);\n      }\n    });\n}\n\nexport function App() {\n  const [state, setState] = React.useState(retrieveState);\n  const latestStateRef = React.useRef({ state, dirty: false });\n\n  const syncRef = React.useRef({ sync: retrieveSync(), dirty: false });\n  const syncPromiseRef = React.useRef(Promise.resolve());\n\n  // Initialize synchronization.\n  React.useEffect(() => {\n    if (syncRef.current.sync) {\n      syncPromiseRef.current = getStateFromServer(syncRef.current.sync)\n        .then(versionAndState => {\n          if (versionAndState) {\n            let [serverVersion, serverState] = versionAndState;\n\n            // Optimistically assume server handled \"saving\" successfully.\n            if (syncRef.current.sync!.saving) {\n              syncRef.current.sync!.saving = false;\n              syncRef.current.sync!.version += 1;\n              syncRef.current.dirty = true;\n\n              // If the server is behind, \"saving\" did not succeed.\n              if (syncRef.current.sync!.version > serverVersion) {\n                syncRef.current.sync!.dirty = true;\n                syncRef.current.sync!.version -= 1;\n                syncRef.current.dirty = true;\n              }\n            }\n\n            // Server is behind, it's probably a bug in client\n            if (syncRef.current.sync!.version > serverVersion) {\n              throw new Error(\"Server is behind client. Either a bug or storage rollback.\");\n            }\n            // Client and server are on the same version.\n            // No other client has modified state when we weren't looking.\n            else if (syncRef.current.sync!.version === serverVersion) {\n              // Ok.\n            }\n            // Client is behind server and we can fast forward because state isn't dirty.\n            else if (syncRef.current.sync!.version < serverVersion && !syncRef.current.sync!.dirty) {\n              syncRef.current.sync!.version = serverVersion;\n              syncRef.current.dirty = true;\n              latestStateRef.current.state = serverState;\n              latestStateRef.current.dirty = false; // Is this correct?\n              setState(serverState);\n            }\n            // Client is behind but state is dirty so we can't fast forward.\n            else {\n              throw new Error(\"State is dirty and can not be fast-forwarded.\")\n            }\n          }\n        })\n        .then(() => {\n          if (syncRef.current.sync!.dirty) {\n            syncRef.current.sync!.saving = true;\n            syncRef.current.sync!.dirty = false;\n            persistSync(syncRef.current.sync!);\n            syncRef.current.dirty = false;\n\n            return sendStateToServer(latestStateRef.current.state, syncRef.current.sync!)\n              .then(version => {\n                syncRef.current.sync!.saving = false;\n                syncRef.current.sync!.version = version;\n                persistSync(syncRef.current.sync!);\n                syncRef.current.dirty = false;\n              })\n              .catch(error => {\n                syncRef.current.sync!.saving = false;\n                syncRef.current.sync!.dirty = true;\n                persistSync(syncRef.current.sync!);\n                syncRef.current.dirty = false;\n                console.error(\"Failed to send state to server.\");\n                console.error(error);\n              })\n          }\n        })\n        .catch(error => {\n          console.error(\"Initializing sync failed.\");\n          console.error(error);\n        })\n    }\n  }, []);\n\n  // Debounce saving state on every change.\n  let debouncedSaveRef = React.useRef(debounce(\n    () => {\n      persistState(latestStateRef.current.state);\n      latestStateRef.current.dirty = false;\n\n      if (syncRef.current.sync) {\n        syncPromiseRef.current = syncPromiseRef\n          .current\n          .then(() => {\n            syncRef.current.sync!.saving = true;\n            syncRef.current.sync!.dirty = false;\n            persistSync(syncRef.current.sync!);\n            syncRef.current.dirty = false;\n\n            return sendStateToServer(latestStateRef.current.state, syncRef.current.sync!)\n              .then(version => {\n                syncRef.current.sync!.saving = false;\n                syncRef.current.sync!.version = version;\n                persistSync(syncRef.current.sync!);\n                syncRef.current.dirty = false;\n              })\n              .catch(error => {\n                syncRef.current.sync!.saving = false;\n                syncRef.current.sync!.dirty = true;\n                persistSync(syncRef.current.sync!);\n                syncRef.current.dirty = false;\n                console.error(\"Failed to send state to server.\");\n                console.error(error);\n              })\n          });\n      }\n    },\n    5000,\n    { trailing: true, leading: false },\n  ));\n\n  // Persist state and sync before closing the page\n  React.useEffect(() => {\n    window.onbeforeunload = () => {\n      // Don't persist if not dirty. Otherwise we would override user's changes.\n      if (latestStateRef.current.dirty) {\n        persistState(latestStateRef.current.state);\n      }\n      if (syncRef.current.dirty) {\n        persistSync(syncRef.current.sync);\n      }\n    };\n    return () => { window.onbeforeunload = null; };\n  }, []);\n\n  // Force-update interface every minute when user is inactive.\n  const [, forceUpdate] = React.useReducer(() => ({}), {});\n  let forceUpdateIntervalRef = React.useRef(0);\n  React.useEffect(() => {\n    forceUpdateIntervalRef.current = window.setInterval(forceUpdate, 60 * 1000);\n    return () => window.clearInterval(forceUpdateIntervalRef.current);\n  });\n\n  const updateStateWithFunction = (updateFunction: StateUpdateFunction) => {\n    let newState = updateFunction(state);\n    latestStateRef.current.state = newState;\n    latestStateRef.current.dirty = true;\n    if (syncRef.current.sync) {\n      syncRef.current.sync.dirty = true;\n      syncRef.current.dirty = true;\n    }\n    debouncedSaveRef.current();\n    setState(newState);\n  };\n\n  return (\n    <StateContext.Provider value={{ state, update: updateStateWithFunction }}>\n      <div className=\"App\">\n        <Tasks />\n        <Week />\n      </div>\n      {/* <pre>\n          <code>\n            {JSON.stringify(state, null, 2)}\n          </code>\n        </pre> */}\n    </StateContext.Provider>\n  );\n}\n","\n// Data necessary for saving state on a server.\nexport type SyncNotNull = {\n    // URL of the sync server, without trailing slash, e.g. 'http://localhost:8000'.\n    storageUrl: string,\n    // JWT auth token that will be passed to the server in 'Authorization: Bearer (TOKEN)` header.\n    authToken: string,\n    // Version of the state stored on a client.\n    version: number,\n    // Whether state has been modified since the last successful save.\n    dirty: boolean,\n    // Whether the client is currently saving state on the server.\n    saving: boolean,\n};\n\nexport type Sync = SyncNotNull | null;\n\n// By default syncing is disabled.\nexport const initialSync = null;\n\nexport function serializeSync(sync: Sync): string {\n    return JSON.stringify(sync);\n}\n\nexport function deserializeSync(syncString: string): Sync {\n    let obj = JSON.parse(syncString);\n    return obj;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\ndeclare global {\n  function dbg<T>(a: T): T;\n}\n\n// @ts-ignore\nglobal.dbg = function <T>(a: T) {\n  console.log(a);\n  return a;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}